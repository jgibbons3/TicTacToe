{"version":3,"sources":["Cell.tsx","Board.tsx","FeedbackBar.tsx","App.tsx","index.tsx"],"names":["Cell","value","playCell","className","onClick","icon","faTimes","faCircle","Board","values","map","rowValues","row","key","rowValue","col","FeedbackBar","player","resetGame","App","useState","setValues","setPlayer","result","ReactDOM","render","document","getElementById"],"mappings":"sNAkBeA,EARF,SAAC,GAAoC,IAAlCC,EAAiC,EAAjCA,MAAOC,EAA0B,EAA1BA,SACrB,OACE,yBAAKC,UAAS,oBAAeF,EAAQ,UAAY,IAAMG,QAASF,KAC3DD,GAAS,kBAAC,IAAD,CAAiBI,KAAgB,IAAVJ,EAAcK,IAAUC,QCelDC,EAlBD,SAAC,GAAsC,IAApCC,EAAmC,EAAnCA,OAAQP,EAA2B,EAA3BA,SACvB,OACE,yBAAKC,UAAU,SACZM,EAAOC,KAAI,SAACC,EAAWC,GAAZ,OACV,yBAAKC,IAAKD,EAAKT,UAAU,aACtBQ,EAAUD,KAAI,SAACI,EAAUC,GAAX,OACb,kBAAC,EAAD,CACEF,IAAKE,EACLd,MAAOa,EACPZ,SAAU,kBAAMA,EAASU,EAAKG,eCW7BC,EAlBK,SAAC,GAA6C,IAA3CC,EAA0C,EAA1CA,OAAQC,EAAkC,EAAlCA,UAC7B,OACE,yBAAKf,UAAU,eACb,yBAAKA,UAAU,uBACb,0CAEE,kBAAC,IAAD,CAAiBE,KAAiB,IAAXY,EAAeX,IAAUC,MAFlD,eAKF,6BACE,4BAAQJ,UAAU,qBAAqBC,QAASc,GAAhD,uBCqBOC,EAhCO,WAAM,MAKEC,mBAAS,CACnC,CAAC,EAAG,EAAG,GACP,CAAC,EAAG,EAAG,GACP,CAAC,EAAG,EAAG,KARiB,mBAKnBX,EALmB,KAKXY,EALW,OAUED,mBAAS,GAVX,mBAUnBH,EAVmB,KAUXK,EAVW,KAoBpBC,EAvBC,GAyBP,OACE,yBAAKpB,UAAU,OACb,yBAAKA,UAAU,cACb,kBAAC,EAAgB,CAAEc,SAAQM,SAAQL,UAPvB,eAQZ,kBAAC,EAAU,CAAET,SAAQc,SAAQrB,SAdlB,SAACU,EAAaG,GAC7BN,EAAOG,GAAKG,GAAOE,EACnBI,EAAUZ,GACVa,GAAWL,SCtBfO,IAASC,OAAO,kBAAC,EAAD,MAASC,SAASC,eAAe,U","file":"static/js/main.64ceaf4f.chunk.js","sourcesContent":["import React from \"react\";\r\n\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { faTimes, faCircle } from \"@fortawesome/free-solid-svg-icons\";\r\n\r\ntype CellProps = {\r\n  value: number;\r\n  playCell?: () => void;\r\n};\r\n\r\nconst Cell = ({ value, playCell }: CellProps) => {\r\n  return (\r\n    <div className={`Board-cell${value ? \" played\" : \"\"}`} onClick={playCell}>\r\n      {!!value && <FontAwesomeIcon icon={value === 1 ? faTimes : faCircle} />}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Cell;\r\n","import React from \"react\";\r\nimport Cell from \"./Cell\";\r\nimport { Result } from \"./Types\";\r\n\r\ntype BoardProps = {\r\n  values: number[][];\r\n  result: Result;\r\n  playCell: (row: number, cell: number) => void;\r\n};\r\n\r\nconst Board = ({ values, playCell }: BoardProps) => {\r\n  return (\r\n    <div className=\"Board\">\r\n      {values.map((rowValues, row) => (\r\n        <div key={row} className=\"Board-row\">\r\n          {rowValues.map((rowValue, col) => (\r\n            <Cell\r\n              key={col}\r\n              value={rowValue}\r\n              playCell={() => playCell(row, col)}\r\n            />\r\n          ))}\r\n        </div>\r\n      ))}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Board;\r\n","import React from \"react\";\r\n\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { faTimes, faCircle } from \"@fortawesome/free-solid-svg-icons\";\r\nimport { Result } from \"./Types\";\r\n\r\ntype FeedbackBarProps = {\r\n  player: number;\r\n  result: Result;\r\n  resetGame: () => void;\r\n};\r\n\r\nconst FeedbackBar = ({ player, resetGame }: FeedbackBarProps) => {\r\n  return (\r\n    <div className=\"FeedbackBar\">\r\n      <div className=\"FeedbackBar-message\">\r\n        <span>\r\n          Au joueur\r\n          <FontAwesomeIcon icon={player === 1 ? faTimes : faCircle} /> de jouer.\r\n        </span>\r\n      </div>\r\n      <div>\r\n        <button className=\"FeedbackBar-button\" onClick={resetGame}>\r\n          RÃ©initialiser\r\n        </button>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default FeedbackBar;\r\n","import React, { useState } from \"react\";\r\nimport \"./App.scss\";\r\n\r\nimport Board from \"./Board\";\r\nimport FeedbackBar from \"./FeedbackBar\";\r\nimport { Result } from \"./Types\";\r\n\r\nconst getResult = (values: number[][]): Result => {\r\n  return {};\r\n};\r\n\r\nconst App: React.FC = () => {\r\n  // Values for the board cells\r\n  // 0 = Not played\r\n  // 1 = played by player X\r\n  // -1 = played by player O\r\n  const [values, setValues] = useState([\r\n    [0, 0, 0],\r\n    [0, 0, 0],\r\n    [0, 0, 0]\r\n  ]);\r\n  const [player, setPlayer] = useState(1);\r\n\r\n  const playCell = (row: number, col: number) => {\r\n    values[row][col] = player;\r\n    setValues(values);\r\n    setPlayer(-player);\r\n  };\r\n\r\n  const resetGame = () => {};\r\n\r\n  const result: Result = getResult(values);\r\n\r\n  return (\r\n    <div className=\"App\">\r\n      <div className=\"App-center\">\r\n        <FeedbackBar {...{ player, result, resetGame }} />\r\n        <Board {...{ values, result, playCell }} />\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default App;\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport App from \"./App\";\r\n\r\nReactDOM.render(<App />, document.getElementById(\"root\"));\r\n"],"sourceRoot":""}